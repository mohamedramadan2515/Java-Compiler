ASSIGNMENT $ \S 
ASSIGNMENT int \S 
ASSIGNMENT while \S 
ASSIGNMENT } \S 
ASSIGNMENT float \S 
ASSIGNMENT id id assign EXPRESSION ; 
ASSIGNMENT if \S 
DECLARATION $ \S 
DECLARATION int PRIMITIVE_TYPE id ; 
DECLARATION while \S 
DECLARATION } \S 
DECLARATION float PRIMITIVE_TYPE id ; 
DECLARATION id \S 
DECLARATION if \S 
EXPRESSION ) \S 
EXPRESSION ; \S 
EXPRESSION ( SIMPLE_EXPRESSION EXPRESSION_DASH 
EXPRESSION id SIMPLE_EXPRESSION EXPRESSION_DASH 
EXPRESSION num SIMPLE_EXPRESSION EXPRESSION_DASH 
EXPRESSION addop SIMPLE_EXPRESSION EXPRESSION_DASH 
EXPRESSION_DASH ) \L 
EXPRESSION_DASH ; \L 
EXPRESSION_DASH relop relop SIMPLE_EXPRESSION 
FACTOR ) \S 
FACTOR ; \S 
FACTOR ( ( EXPRESSION ) 
FACTOR id id 
FACTOR num num 
FACTOR mulop \S 
FACTOR relop \S 
FACTOR addop \S 
IF $ \S 
IF int \S 
IF while \S 
IF } \S 
IF float \S 
IF id \S 
IF if if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
METHOD_BODY $ \S 
METHOD_BODY int STATEMENT_LIST 
METHOD_BODY while STATEMENT_LIST 
METHOD_BODY float STATEMENT_LIST 
METHOD_BODY id STATEMENT_LIST 
METHOD_BODY if STATEMENT_LIST 
PRIMITIVE_TYPE int int 
PRIMITIVE_TYPE float float 
PRIMITIVE_TYPE id \S 
SIGN ( \S 
SIGN id \S 
SIGN num \S 
SIGN addop addop 
SIMPLE_EXPRESSION ) \S 
SIMPLE_EXPRESSION ; \S 
SIMPLE_EXPRESSION ( TERM SIMPLE_EXPRESSION_DASH 
SIMPLE_EXPRESSION id TERM SIMPLE_EXPRESSION_DASH 
SIMPLE_EXPRESSION num TERM SIMPLE_EXPRESSION_DASH 
SIMPLE_EXPRESSION relop \S 
SIMPLE_EXPRESSION addop SIGN TERM SIMPLE_EXPRESSION_DASH 
SIMPLE_EXPRESSION_DASH ) \L 
SIMPLE_EXPRESSION_DASH ; \L 
SIMPLE_EXPRESSION_DASH relop \L 
SIMPLE_EXPRESSION_DASH addop addop TERM SIMPLE_EXPRESSION_DASH 
STATEMENT $ \S 
STATEMENT int DECLARATION 
STATEMENT while WHILE 
STATEMENT } \S 
STATEMENT float DECLARATION 
STATEMENT id ASSIGNMENT 
STATEMENT if IF 
STATEMENT_LIST $ \S 
STATEMENT_LIST int STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST while STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST float STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST id STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST if STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST_DASH $ \L 
STATEMENT_LIST_DASH int STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST_DASH while STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST_DASH float STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST_DASH id STATEMENT STATEMENT_LIST_DASH 
STATEMENT_LIST_DASH if STATEMENT STATEMENT_LIST_DASH 
TERM ) \S 
TERM ; \S 
TERM ( FACTOR TERM_DASH 
TERM id FACTOR TERM_DASH 
TERM num FACTOR TERM_DASH 
TERM relop \S 
TERM addop \S 
TERM_DASH ) \L 
TERM_DASH ; \L 
TERM_DASH mulop mulop FACTOR TERM_DASH 
TERM_DASH relop \L 
TERM_DASH addop \L 
WHILE $ \S 
WHILE int \S 
WHILE while while ( EXPRESSION ) { STATEMENT } 
WHILE } \S 
WHILE float \S 
WHILE id \S 
WHILE if \S 
